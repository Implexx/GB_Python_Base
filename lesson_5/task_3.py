"""
3. Есть два списка:
tutors = [
    'Иван', 'Анастасия', 'Петр', 'Сергей',
    'Дмитрий', 'Борис', 'Елена'
]
klasses = [
    '9А', '7В', '9Б', '9В', '8Б', '10А', '10Б', '9А'
]
Необходимо реализовать генератор, возвращающий кортежи вида (<tutor>, <klass>), например:
('Иван', '9А')
('Анастасия', '7В')
...
Количество генерируемых кортежей не должно быть больше длины списка tutors. Если в списке klasses меньше элементов, чем
в списке tutors, необходимо вывести последние кортежи в виде: (<tutor>, None), например:
('Станислав', None)

### Доказать, что вы создали именно генератор. Проверить его работу вплоть до истощения. Подумать, в каких ситуациях
генератор даст эффект.
"""

tutors = ['Иван', 'Анастасия', 'Петр', 'Сергей', 'Дмитрий', 'Борис', 'Елена', 'Боря', 'Витя', 'Даша', 'Паша']
klasses = ['9А', '7В', '9Б', '9В', '8Б', '10А', '10Б', '9А']

# Расширяем список классов, если он короче списка Имен
if len(klasses) < len(tutors):
    for i in range(len(tutors) - len(klasses)):
        klasses.append(None)

# Создаем генератор пар Имя, Класс
my_gen = ((tutors[i], klasses[i]) for i in range(len(tutors)))

# Проверяем что генератор
print(type(my_gen))

for elem in my_gen:
    print(elem)

# Проверяем что истощен генератор
print(next(my_gen))
