"""
5. Подумайте, как можно сделать оптимизацию кода по памяти, по скорости.
Представлен список чисел. Определить элементы списка, не имеющие повторений. Сформировать из этих элементов список
с сохранением порядка их следования в исходном списке, например:
src = [2, 2, 2, 7, 23, 1, 44, 44, 3, 2, 10, 7, 4, 11]
result = [23, 1, 3, 10, 4, 11]
Подсказка: напишите сначала решение «в лоб». Потом подумайте об оптимизации.
"""

src = [2, 2, 2, 7, 23, 1, 44, 44, 3, 2, 10, 7, 4, 11]

# Решение "в лоб". Берем в первом цикле элемент, и сравниваем с числами списка во втором цикле.
result_1 = []
for i in range(len(src)):
    count = 0
    for j in range(len(src)):
        if src[i] == src[j]:
            count += 1
    if count == 1:
        result_1.append(src[i])

print(f'Результат решения В лоб - {result_1}')


# Решение через comprehensions
result_3 = [src[i] for i in range(len(src)) if src[i] not in src[:i] if src[i] not in src[i + 1:]]
print(f'Результат решения через comprehencions - {result_3}')




